{"version":3,"sources":["components/InternalLink.js","pages/Home.js","components/ExternalLink.js","pages/AboutMe.js","pages/Projects.js","pages/Site.js","navbars/SideBar.js","navbars/BottomBar.js","App.js","serviceWorker.js","index.js"],"names":["InternalLink","props","onClick","window","scrollTo","Home","windowDims","homenavElementInfo","homenavStyle","homenavAnchorStyle","width","length","flexDirection","padding","homenavElements","map","element","to","link","style","text","className","ExternalLink","target","rel","AboutMe","href","Projects","Site","SideBar","BottomBar","pageInfo","links","page","path","fontSize","App","useState","windowWidth","setWindowWidth","windowHeight","setWindowHeight","updateDimensions","newWindowWidth","newWindowHeight","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","bodyStyle","navbar","backgroundColor","height","zIndex","pages","exact","render","React","createElement","component","basename","process","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.028b53bf.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst InternalLink = (props) => {\n\n  const scrollToTop = () => {\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <Link {...props} onClick={scrollToTop} />\n  );\n};\n\nexport default InternalLink;","import React from 'react';\nimport InternalLink from \"../components/InternalLink\";\n\nconst Home = ({windowDims}) => {\n\n  const homenavElementInfo = [\n    {'text': 'About Me',\n    'link': '/about'},\n    {'text': 'Projects',\n    'link': '/projects'},\n    {'text': 'About the Site',\n    'link': '/site'}\n  ];\n\n  let homenavStyle = {};\n  let homenavAnchorStyle = {};\n\n  if (windowDims[0] >= 850) {\n    // normal size\n    homenavAnchorStyle = {\n      width: 100 / homenavElementInfo.length + \"%\"\n    };\n  } else {\n    // small size\n    homenavStyle = {\n      flexDirection: 'column'\n    };\n    homenavAnchorStyle = {\n      padding: '6px'\n    };\n  }\n\n  const homenavElements = homenavElementInfo.map(element => {\n    return <InternalLink to={element.link} style={homenavAnchorStyle}>{element.text}</InternalLink>\n  });\n\n  return (\n    <div className=\"home\">\n      <h1 className=\"hometitle\">Toby Ueno</h1>\n      <div className=\"homenav\" style={homenavStyle}>\n        {homenavElements}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nconst ExternalLink = (props) => {\n  return (\n    <a {...props} target=\"_blank\" rel=\"noopener noreferrer\"/>\n  );\n};\n\nexport default ExternalLink;","import React from 'react';\nimport ExternalLink from \"../components/ExternalLink\";\n\nconst AboutMe = () => {\n  return (\n    <div>\n      <h1>About Me</h1>\n      <div>\n        <p>I am Toby Ueno, a 17-year-old high school student who has taken up coding as a hobby.</p>\n        <p>\n          I wrote my first line of code a year ago as part of a Computer Science course, but since then I've\n          learned a lot and grown significantly as a programmer.\n        </p>\n        <p>The programming languages I know are Python, JavaScript, and Java, in order of familiarity.</p>\n        <p>I also have experience with HTML and CSS.</p>\n        <p>\n          Some of my favorite libraries to work with are Selenium, React, and pandas.\n        </p>\n      </div>\n      <div>\n        <h1>Contact</h1>\n        <p>If you would like to reach out to me, feel free to do so at the following locations:</p>\n        <p>Email: <ExternalLink href=\"mailto:tobyueno@gmail.com\">tobyueno@gmail.com</ExternalLink></p>\n        <p>Github: <ExternalLink href=\"https://github.com/uenot/\">uenot</ExternalLink></p>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;","import React from 'react';\nimport ExternalLink from \"../components/ExternalLink\";\nimport InternalLink from \"../components/InternalLink\";\n\nconst Projects = () => {\n  return (\n    <div>\n      <div className=\"project-header\">\n        <h1>Projects</h1>\n        <p>\n          Listed here are my completed or in-progress projects, big and small. Check out the linked GitHub repos for\n          the code and more info on each project.\n        </p>\n      </div>\n      <div className=\"project\">\n        <h2><ExternalLink href=\"https://github.com/uenot/auto-ff\">Auto-FF</ExternalLink></h2>\n        <p>\n          This collection of scripts was written to manage Yahoo fantasy football teams. It can draft a team based\n          on custom or pre-determined rankings and dynamic position weighting, and it can automatically send, parse,\n          and accept or reject trades.\n        </p>\n        <p>\n          The project was written in Python, and features Selenium to navigate and manipulate the website.\n          Other libraries used include BeautifulSoup for web scraping and pandas for data analysis.\n        </p>\n      </div>\n      <div className=\"project\">\n        <h2><ExternalLink href=\"https://github.com/uenot/nocturne-ts\">NocturneTS</ExternalLink></h2>\n        <p>\n          NocturneTS is a full text-based recreation of the turn-based combat found in the 2003 video\n          game <ExternalLink href=\"https://en.wikipedia.org/wiki/Shin_Megami_Tensei_III:_Nocturne\">Shin\n          Megami Tensei: Nocturne</ExternalLink>.\n          The program features multiple game modes that involve user input and a fully-automated \"experiment mode\"\n          that can simulate thousands of games with custom settings.\n        </p>\n        <p>\n          This project was written in Python. It has no major dependenciesâ€” the only one of\n          note is the FuzzyWuzzy library for handling imprecise user input.\n        </p>\n      </div>\n      <div className=\"project\">\n        <h2><InternalLink to=\"/site\">This Website</InternalLink></h2>\n        <p>See the dedicated \"<InternalLink to=\"/site\">About the Site</InternalLink>\" page for more info.</p>\n      </div>\n      <div className=\"project\">\n        <h2>\n          <ExternalLink href=\"https://github.com/uenot/oneline-hangman\">Oneline Hangman</ExternalLink>\n        </h2>\n        <p>\n          This short project is a simple command-line based game of Hangman. It was written in one (long) line of code\n          and served as an exercise in working with complex anonymous functions.\n        </p>\n        <p>\n          This line of code was written in Python, and has no major dependencies. If run on Windows, requires the\n          requests library to fetch a word bank.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;","import React from 'react';\nimport ExternalLink from \"../components/ExternalLink\";\n\nconst Site = () => {\n  return (\n    <div>\n      <h1>About the Site</h1>\n      <p>\n        This site was created with the goal of practicing web design.\n      </p>\n      <p>\n        The frontend was constructed through <ExternalLink href=\"https://reactjs.org/\">ReactJS</ExternalLink> and\n        the <code>create-react-app</code> tool.\n      </p>\n      <p>\n        The <code>react-router-dom</code> package was used for reload-free pages.\n      </p>\n      <p>\n        The site was originally constructed for desktop browsers. The mobile version was implemented through a\n        combination of dynamic component rendering and inline CSS styles.\n      </p>\n      <p>\n        GitHub's Pages service was used to host the site.\n      </p>\n      <p>\n        Through this project, I learned about React and NodeJS and gained more experience with practical\n        implementations of HTML, CSS, and JavaScript.\n      </p>\n      <p>\n        The source code for this website is\n        available <ExternalLink href=\"https://github.com/uenot/personal-site\">in this GitHub repo</ExternalLink>.\n        The website is hosted <ExternalLink href=\"https://github.com/uenot/uenot.github.io\">in a different\n        repository</ExternalLink> which uses an optimized (and unreadable) version of the code.\n      </p>\n    </div>\n  );\n};\n\nexport default Site;","import React from 'react';\nimport InternalLink from \"../components/InternalLink\";\n\nconst SideBar = () => {\n  return (\n    <div className=\"header\">\n      <h2 className=\"center\">Contents</h2>\n      <ul className=\"ulnav\">\n        <InternalLink to=\"/\">Home</InternalLink>\n        <InternalLink to=\"/about\">About Me</InternalLink>\n        <InternalLink to=\"/projects\">Projects</InternalLink>\n        <InternalLink to=\"/site\">About the Site</InternalLink>\n      </ul>\n    </div>\n  );\n}\n\nexport default SideBar;","import React from 'react';\nimport Home from \"../pages/Home\";\nimport AboutMe from \"../pages/AboutMe\";\nimport Projects from \"../pages/Projects\";\nimport Site from \"../pages/Site\";\nimport InternalLink from \"../components/InternalLink\";\n\nconst BottomBar = () => {\n\n  const pageInfo = [\n    {'component': Home,\n      'path': '/',\n      'text': 'Home'},\n    {'component': AboutMe,\n      'path': '/about',\n      'text': 'About Me'},\n    {'component': Projects,\n      'path': '/projects',\n      'text': 'Projects'},\n    {'component': Site,\n      'path': '/site',\n      'text': 'About the Site'}\n  ];\n\n  const links = pageInfo.map(page => {\n    return <InternalLink to={page.path}\n                         style={{width: 100 / pageInfo.length + '%', fontSize: 16}}>{page.text}</InternalLink>\n  });\n\n  return (\n    <div className=\"bottom-header\">\n      <div className=\"bottom-nav\">\n        {links}\n      </div>\n    </div>\n  );\n};\n\nexport default BottomBar;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from \"./pages/Home\";\nimport AboutMe from \"./pages/AboutMe\";\nimport Projects from \"./pages/Projects\";\nimport Site from \"./pages/Site\";\nimport SideBar from \"./navbars/SideBar.js\";\nimport BottomBar from \"./navbars/BottomBar\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nconst App = () => {\n\n  const [windowWidth, setWindowWidth] = useState(0);\n  const [windowHeight, setWindowHeight] = useState(0);\n  const windowDims = [windowWidth, windowHeight];\n\n  const updateDimensions = () => {\n    let newWindowWidth;\n    let newWindowHeight;\n    if (typeof window == 'undefined') {\n      newWindowWidth = 0;\n      newWindowHeight = 0;\n    } else {\n      newWindowWidth = window.innerWidth;\n      newWindowHeight = window.innerHeight;\n    }\n    setWindowWidth(newWindowWidth);\n    setWindowHeight(newWindowHeight);\n  }\n\n  useEffect(() => {\n    updateDimensions();\n\n    window.addEventListener(\"resize\", updateDimensions);\n\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    }\n  });\n\n  const bodyStyle = {};\n\n  let navbar = <SideBar />\n\n  if (windowWidth < 850) {\n    bodyStyle['background'] = 'linear-gradient(0deg, #6f9ceb, #141b41 10vh)';\n    bodyStyle['width'] = '100%';\n    bodyStyle['minHeight'] = '90vh';\n    navbar = <div>\n      <div style={{width: '100%', backgroundColor: '#6f9ceb', height: '10vh', zIndex: '-1'}}/>\n      <BottomBar />\n    </div>;\n  }\n\n\n  const pageInfo = [\n    {'component': Home,\n    'path': '/',\n    'exact': true},\n    {'component': AboutMe,\n    'path': '/about',\n    'exact': false},\n    {'component': Projects,\n    'path': '/projects',\n    'exact': false},\n    {'component': Site,\n    'path': '/site',\n    'exact': false}\n    ];\n\n  const pages = pageInfo.map(page => {\n    return <Route exact={page.exact} path={page.path} render={props => React.createElement(\n      page.component, {...props, windowDims: windowDims}\n    )} />\n  });\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"app\">\n        <div className=\"body\" style={bodyStyle}>\n          <Switch>\n            {pages}\n          </Switch>\n        </div>\n        {navbar}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}