{"version":3,"sources":["pages/Home.js","pages/AboutMe.js","pages/Projects.js","pages/Site.js","navbars/SideBar.js","navbars/BottomBar.js","App.js","serviceWorker.js","index.js"],"names":["Home","windowDims","homenavElementInfo","homenavStyle","homenavAnchorStyle","width","length","flexDirection","padding","homenavElements","map","element","to","link","onClick","window","scrollTo","style","text","className","AboutMe","href","Projects","target","rel","Site","SideBar","BottomBar","pageInfo","scrollToTop","links","page","path","fontSize","App","useState","windowWidth","setWindowWidth","windowHeight","setWindowHeight","updateDimensions","newWindowWidth","newWindowHeight","innerWidth","innerHeight","useEffect","addEventListener","removeEventListener","bodyStyle","navbar","backgroundColor","height","zIndex","pages","exact","render","props","React","createElement","component","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e4ff19a6.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Home = ({windowDims}) => {\n\n  const homenavElementInfo = [\n    {'text': 'About Me',\n    'link': '/about'},\n    {'text': 'Projects',\n    'link': '/projects'},\n    {'text': 'About the Site',\n    'link': '/site'}\n  ];\n\n  let homenavStyle = {};\n  let homenavAnchorStyle = {};\n\n  if (windowDims[0] >= 850) {\n    // normal size\n    homenavAnchorStyle = {\n      width: 100 / homenavElementInfo.length + \"%\"\n    };\n  } else {\n    // small size\n    homenavStyle = {\n      flexDirection: 'column'\n    };\n    homenavAnchorStyle = {\n      padding: '6px'\n    };\n  }\n\n  const homenavElements = homenavElementInfo.map(element => {\n    return <Link to={element.link}\n                 onClick={window.scrollTo(0, 0)}\n                 style={homenavAnchorStyle}>{element.text}\n    </Link>\n  });\n\n  return (\n    <div className=\"home\">\n      <h1 className=\"hometitle\">Toby Ueno</h1>\n      <div className=\"homenav\" style={homenavStyle}>\n        {homenavElements}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nconst AboutMe = () => {\n  return (\n    <div>\n      <h1>About Me</h1>\n      <div>\n        <p>I am Toby Ueno, a 17-year-old high school student who has taken up coding as a hobby.</p>\n        <p>\n          I wrote my first line of code a year ago as part of a Computer Science course, but since then I've\n          learned a lot and grown significantly as a programmer.\n        </p>\n        <p>The programming languages I know are Python, JavaScript, and Java, in order of familiarity.</p>\n        <p>I also have experience with HTML and CSS.</p>\n        <p>\n          Some of my favorite libraries to work with are Selenium, React, and pandas.\n        </p>\n      </div>\n      <div>\n        <h1>Contact</h1>\n        <p>If you would like to reach out to me, feel free to do so at the following locations:</p>\n        <p>Email: <a href=\"mailto:tobyueno@gmail.com\">tobyueno@gmail.com</a></p>\n        <p>Github: <a href=\"https://github.com/uenot/\">uenot</a></p>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Projects = () => {\n  return (\n    <div>\n      <div className=\"project-header\">\n        <h1>Projects</h1>\n        <p>\n          Listed here are my completed or in-progress projects, big and small. Check out the linked GitHub repos for\n          the code and more info on each project.\n        </p>\n      </div>\n      <div className=\"project\">\n        <h2><a href=\"https://github.com/uenot/auto-ff\" target=\"_blank\" rel=\"noopener noreferrer\">Auto-FF</a></h2>\n        <p>\n          This collection of scripts was written to manage Yahoo fantasy football teams. It can draft a team based\n          on custom or pre-determined rankings and dynamic position weighting, and it can automatically send, parse,\n          and accept or reject trades.\n        </p>\n        <p>\n          The project was written in Python, and features Selenium to navigate and manipulate the website.\n          Other libraries used include BeautifulSoup for web scraping and pandas for data analysis.\n        </p>\n      </div>\n      <div className=\"project\">\n        <h2><a href=\"https://github.com/uenot/nocturne-ts\" target=\"_blank\" rel=\"noopener noreferrer\">NocturneTS</a></h2>\n        <p>\n          NocturneTS is a full text-based recreation of the turn-based combat found in the 2003 video\n          game <a href=\"https://en.wikipedia.org/wiki/Shin_Megami_Tensei_III:_Nocturne\"\n             target=\"_blank\" rel=\"noopener noreferrer\">Shin Megami Tensei: Nocturne</a>.\n          The program features multiple game modes that involve user input and a fully-automated \"experiment mode\"\n          that can simulate thousands of games with custom settings.\n        </p>\n        <p>\n          This project was written in Python. It has no major dependenciesâ€” the only one of\n          note is the FuzzyWuzzy library for handling imprecise user input.\n        </p>\n      </div>\n      <div className=\"project\">\n        <h2><Link to=\"/site\">This Website</Link></h2>\n        <p>See the dedicated \"<Link to=\"/site\">About the Site</Link>\" page for more info.</p>\n      </div>\n      <div className=\"project\">\n        <h2>\n          <a href=\"https://github.com/uenot/oneline-hangman\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Oneline Hangman\n          </a>\n        </h2>\n        <p>\n          This short project is a simple command-line based game of Hangman. It was written in one (long) line of code\n          and served as an exercise in working with complex anonymous functions.\n        </p>\n        <p>\n          This line of code was written in Python, and has no major dependencies. If run on Windows, requires the\n          requests library to fetch a word bank.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;","import React from 'react';\n\nconst Site = () => {\n  return (\n    <div>\n      <h1>About the Site</h1>\n      <p>\n        This site was created with the goal of practicing web design.\n      </p>\n      <p>\n        The frontend was constructed through <a href=\"https://reactjs.org/\">ReactJS</a> and\n        the <code>create-react-app</code> tool.\n      </p>\n      <p>\n        The <code>react-router-dom</code> package was used for reload-free pages.\n      </p>\n      <p>\n        The site was originally constructed for desktop browsers. The mobile version was implemented through a\n        combination of dynamic component rendering and inline CSS styles.\n      </p>\n      <p>\n        GitHub's Pages service was used to host the site.\n      </p>\n      <p>\n        Through this project, I learned about React and NodeJS and gained more experience with practical\n        implementations of HTML, CSS, and JavaScript.\n      </p>\n      <p>\n        The source code for this website is\n        available <a href=\"https://github.com/uenot/personal-site\">in this GitHub repo</a>. The website is\n        hosted <a href=\"https://github.com/uenot/uenot.github.io\">in a different repository</a> which uses an\n        optimized (and unreadable) version of the code.\n      </p>\n    </div>\n  );\n};\n\nexport default Site;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst SideBar = () => {\n  return (\n    <div className=\"header\">\n      <h2 className=\"center\">Contents</h2>\n      <ul className=\"ulnav\">\n        <Link to=\"/\" onClick={window.scrollTo(0, 0)} >Home</Link>\n        <Link to=\"/about\" onClick={window.scrollTo(0, 0)} >About Me</Link>\n        <Link to=\"/projects\" onClick={window.scrollTo(0, 0)} >Projects</Link>\n        <Link to=\"/site\" onClick={window.scrollTo(0, 0)} >About the Site</Link>\n      </ul>\n    </div>\n  );\n}\n\nexport default SideBar;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport AboutMe from \"../pages/AboutMe\";\nimport Projects from \"../pages/Projects\";\nimport Site from \"../pages/Site\";\n\nconst BottomBar = () => {\n\n  const pageInfo = [\n    {'component': Home,\n      'path': '/',\n      'text': 'Home'},\n    {'component': AboutMe,\n      'path': '/about',\n      'text': 'About Me'},\n    {'component': Projects,\n      'path': '/projects',\n      'text': 'Projects'},\n    {'component': Site,\n      'path': '/site',\n      'text': 'About the Site'}\n  ];\n\n  const scrollToTop = () => {\n    window.scrollTo(0, 0);\n  }\n\n  const links = pageInfo.map(page => {\n    return <Link to={page.path}\n                 style={{width: 100 / pageInfo.length + '%', fontSize: 16}}\n                 onClick={scrollToTop}>{page.text}</Link>\n  });\n\n  return (\n    <div className=\"bottom-header\">\n      <div className=\"bottom-nav\">\n        {links}\n      </div>\n    </div>\n  );\n};\n\nexport default BottomBar;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Home from \"./pages/Home\";\nimport AboutMe from \"./pages/AboutMe\";\nimport Projects from \"./pages/Projects\";\nimport Site from \"./pages/Site\";\nimport SideBar from \"./navbars/SideBar.js\";\nimport BottomBar from \"./navbars/BottomBar\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nconst App = () => {\n\n  const [windowWidth, setWindowWidth] = useState(0);\n  const [windowHeight, setWindowHeight] = useState(0);\n  const windowDims = [windowWidth, windowHeight];\n\n  const updateDimensions = () => {\n    let newWindowWidth;\n    let newWindowHeight;\n    if (typeof window == 'undefined') {\n      newWindowWidth = 0;\n      newWindowHeight = 0;\n    } else {\n      newWindowWidth = window.innerWidth;\n      newWindowHeight = window.innerHeight;\n    }\n    setWindowWidth(newWindowWidth);\n    setWindowHeight(newWindowHeight);\n  }\n\n  useEffect(() => {\n    updateDimensions();\n\n    window.addEventListener(\"resize\", updateDimensions);\n\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    }\n  });\n\n  const bodyStyle = {};\n\n  let navbar = <SideBar />\n\n  if (windowWidth < 850) {\n    bodyStyle['background'] = 'linear-gradient(0deg, #6f9ceb, #141b41 10vh)';\n    bodyStyle['width'] = '100%';\n    bodyStyle['minHeight'] = '90vh';\n    navbar = <div>\n      <div style={{width: '100%', backgroundColor: '#6f9ceb', height: '10vh', zIndex: '-1'}}/>\n      <BottomBar />\n    </div>;\n  }\n\n\n  const pageInfo = [\n    {'component': Home,\n    'path': '/',\n    'exact': true},\n    {'component': AboutMe,\n    'path': '/about',\n    'exact': false},\n    {'component': Projects,\n    'path': '/projects',\n    'exact': false},\n    {'component': Site,\n    'path': '/site',\n    'exact': false}\n    ];\n\n  const pages = pageInfo.map(page => {\n    return <Route exact={page.exact} path={page.path} render={props => React.createElement(\n      page.component, {...props, windowDims: windowDims}\n    )} />\n  });\n\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <div className=\"body\" style={bodyStyle}>\n          <Switch>\n            {pages}\n          </Switch>\n        </div>\n        {navbar}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}